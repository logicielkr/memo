<querys>
	<header>
		<style name="default"><![CDATA[
body {
	margin:10px;
}
div.nav {
	font-size:18px;
	margin-bottom:5px;
	margin-top:5px;
	clear:both;
	width:100%;
	
	display: grid;
	display:-ms-grid;
	-ms-grid-columns: 1fr 2fr 1fr;
	grid-template-columns: 1fr 2fr 1fr;
}
div.nav div.left {
	-ms-grid-column:1;
	text-align:left;
}
div.nav div.center {
	-ms-grid-column:2;
	text-align:center;
}
div.nav div.right {
	-ms-grid-column:3;
	text-align:right;
}
@supports not (display: grid) {
	div.nav {
		font-size:18px;
		margin-bottom:5px;
		margin-top:5px;
		clear:both;
		width:100%;
		display:block;
	}
	div.nav div.left {
		float: left;
		width: 25%;
		min-width:25%;
		text-align:left;
		display:block;
	}
	div.nav div.center {
		float: left;
		width: 50%;
		min-width: 50%;
		text-align:center;
		display:block;
	}
	div.nav div.right {
		float: right;
		width: 25%;
		min-width:25%;
		text-align:right;
		display:block;
	}
}
div.nav form {
	display:inline;
	font-size:18px;
}
input, textarea, select, td, th {
	font-size:18px;
}
div.nav div.box ul.pages {
	list-style:none;
	margin:0px;
	display:inline-block;
	padding:0px;
}
div.nav div.box li.page {
	margin:0px;
	display:inline;
	padding-right:3px;
	padding-left:3px;
}
table.graha {
	border-collapse:collapse;
	border-top:#0f4c81 2px solid;
	border-bottom:#0f4c81 1px solid;
	width:100%;
	margin-top:0px;
	font-size:18px;
}
table.graha th.graha {
	font-weight:400;
	background-color:#0f4c81;
	text-align:center;
	color:#FFFFFF;
	padding-top:7px;
	padding-bottom:7px;
	font-size:18px;
}
table.graha td.graha {
	border-bottom:#C3C3C3 inset 1px;
	color:#333;
	padding-top:7px;
	padding-bottom:7px;
	font-size:18px;
}
table.graha tbody.graha td.graha a {
	text-decoration:none;
	font-size:18px;
}
h2.title {
	margin:0;
	margin-bottom:10px;
	width:100%;
	padding:0;
	background-color:#f3F3F3;
	text-align:center;
	clear:both;
}
		]]></style>
		<style name="input.width"><![CDATA[
table.graha input[type='text'], table.graha select, table.graha textarea {
	width:100%;
}
table.graha input[type='text'] {
	width:calc(100% - 15px);
	width: fill-available;
	width: -moz-fill-available;
	width: -webkit-fill-available;
}
table.graha textarea {
	height:300px;
}
select, input[type='text'], input[type='submit'], input[type='button'], button {
	font-size:18px;
	vertical-align: middle;
}
		]]></style>
		<style name="nav.small.screen"><![CDATA[
@media only screen and (max-width: 600px) {
	div.nav {
		font-size:18px;
		display: grid;
		grid-template-columns: 3fr 4fr 3fr;
	}
}
		]]></style>
		<script name="check_submit"><![CDATA[
function check_submit(form, msg) {
	if(typeof(_check) == "function" &amp;&amp; !_check(form)) {
		return false;
	}
	if(confirm(msg)) {
		return true;
	} else {
		return false;
	}
}
		]]></script>
		<script name="fn_check"><![CDATA[
function _minLength(form, name, len) {
	var obj = eval("form." + name);
	if(obj.value == null) {
		return true;
	} else if((obj.value).length == 0) {
		return true;
	} else if((obj.value).length > len) {
		return true;
	}
	return false;
}
function _maxLength(form, name, len) {
	var obj = eval("form." + name);
	if(obj.value == null) {
		return true;
	} else if((obj.value).length &lt; len) {
		return true;
	}
	return false;
}
function _notNull(form, name) {
	var obj = eval("form." + name);
	if(obj.value == null) {
		return false;
	} else if(obj.value == "") {
		return false;
	}
	return true;
}
function _numberFormat(form, name, t) {
	var obj = eval("form." + name);
	var v = obj.value;
	v = v.replace(/,/g, "");
	if(t == "int" || t == "long") {
		if(!isNaN(Number(v)) &amp;&amp; !isNaN(parseInt(v)) &amp;&amp; parseInt(v).toString() == v) {
			return true;
		}
	} else if(t == "float" || t == "double") {
		if(!isNaN(Number(v)) &amp;&amp; !isNaN(parseFloat(v))) {
			return true;
		}
	}
	return false;
}
function _format(form, name, t) {
	var obj = eval("form." + name);
	var v = obj.value;
	return (new RegExp(t)).test(v);
}
		]]></script>
		<script name="ajax_parse_xml_document"><![CDATA[
function parse_xml_document(result) {
	var obj = new Object();
	var root = result.childNodes;
	for(var i = 0; i &lt; root.length; i++) {
		if(root[i].nodeName == "document") {
			for(var x = 0; x &lt; root[i].childNodes.length; x++) {
				if(root[i].childNodes[x].nodeType == 1) {
					if(root[i].childNodes[x].nodeName == "params" || root[i].childNodes[x].nodeName == "results") {
						obj[root[i].childNodes[x].nodeName] = new Object();
					} else  if(root[i].childNodes[x].nodeName == "code") {
						obj[root[i].childNodes[x].nodeName] = new Object();
						obj[root[i].childNodes[x].nodeName][root[i].childNodes[x].getAttribute("name")] = new Array();
					} else {
						obj[root[i].childNodes[x].nodeName] = new Array();
					}
					for(var y = 0; y &lt; root[i].childNodes[x].childNodes.length; y++) {
						if(root[i].childNodes[x].childNodes[y].nodeType == 1) {
							if(root[i].childNodes[x].nodeName == "params" || root[i].childNodes[x].nodeName == "results") {
								obj[root[i].childNodes[x].nodeName][root[i].childNodes[x].childNodes[y].nodeName] = root[i].childNodes[x].childNodes[y].firstChild.nodeValue;
							} else if(root[i].childNodes[x].nodeName == "code") {
								var row = new Object();
								row["value"] = root[i].childNodes[x].childNodes[y].getAttribute("value");
								row["label"] = root[i].childNodes[x].childNodes[y].getAttribute("label");
								obj[root[i].childNodes[x].nodeName][root[i].childNodes[x].getAttribute("name")].push(row);
							} else {
								var row = new Object();
								for(var z = 0; z &lt; root[i].childNodes[x].childNodes[y].childNodes.length; z++) {
									if(root[i].childNodes[x].childNodes[y].childNodes[z].nodeType == 1) {
										row[root[i].childNodes[x].childNodes[y].childNodes[z].nodeName] = root[i].childNodes[x].childNodes[y].childNodes[z].firstChild.nodeValue;
									}
								}
								obj[root[i].childNodes[x].nodeName].push(row);
							}
						}
					}
				}
			}
		}
	}
	/*
	console.log(new XMLSerializer().serializeToString(result));
	console.log(JSON.stringify(obj));
	*/
	return obj;
}
		]]></script>
	</header>
</querys>
